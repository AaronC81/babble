impl Program {
    [
        result = 0.
        Program catchIfTrue: [ |x| x equals: 3 ] in: [
            result = result add: 1.
            Program catchIfTrue: [ |x| x equals: 2 ] in: [
                result = result add: 1.
                Program throw: 3.
                result = result add: 1.
            ].
            result = result add: 1.
        ].
        InternalTest case: "catchIfTrue:in:" that: result equals: 2.
    ] call.

    /// Runs the given body block, and exits if an object is thrown in it with `throw:` and
    /// it equals the given object according to `equals:`. If they are not equal, the object is
    /// rethrown.
    ///
    /// @param catchEquals: The value to compare against.
    /// @param in: The block to execute.
    /// @returns The value returned by the block, or the thrown value if the block exits early.
    static func catchEquals: value in: block {
        Program catchIfTrue: [ |x| x equals: value ] in: block
    }
    [
        result = 0.
        Program catchEquals: 3 in: [
            result = result add: 1.
            Program catchEquals: 2 in: [
                result = result add: 1.
                Program throw: 3.
                result = result add: 1.
            ].
            result = result add: 1.
        ].
        InternalTest case: "catchEquals:in:" that: result equals: 2.
    ] call.
}
