impl String {
    // Slightly wonky test for escape sequences
    InternalTest case: "escapes" that: "\r\n\t\0\"" length equals: 5.

    /// Gets the characters within this string.
    ///
    /// @returns An array of this string's characters.
    func chars {
        result = #{}.
        self length times: [ |i|
            result append: (self charAt: i).
            i = i add: 1.
        ].
        result
    }
    InternalTest case: "chars" that: "hello" chars equals: #{ "h" "e" "l" "l" "o" }.

    /// Whether this string is composed entirely of whitespace.
    ///
    /// This currently only supports ASCII whitespace characters: \r, \n, \t, and space.
    ///
    /// @returns `true` if the string is entirely ASCII whitespace, `false` otherwise.
    func isWhitespace {
        wsChars = #{ "\r" "\n" "\t" " " }.
        self chars all: [ |c| wsChars contains: c ].
    }
    InternalTest case: "isWhitespace pos" that: " \t  \r  " isWhitespace equals: true.
    InternalTest case: "isWhitespace neg" that: " \t h \r  " isWhitespace equals: false.

    /// Returns a copy of this string with whitespace stripped from the beginning and end.
    ///
    /// @returns The new string with whitespace stripped.
    func strip {
        self chars skipWhile: [ |c| c isWhitespace ]
                 $ reverse skipWhile: [ |c| c isWhitespace ]
                 $ reverse join
    }
    InternalTest case: "strip" that: " \n  abc \r\t  " strip equals: "abc".
}
